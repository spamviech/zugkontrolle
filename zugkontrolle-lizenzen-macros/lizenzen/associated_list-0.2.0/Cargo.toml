# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.75"
name = "associated_list"
version = "0.2.0"
authors = ["spamviech <spamviech@web.de>"]
publish = true
description = "An associated list, for cases when the key implements neither Hash nor Ord."
readme = "README.md"
keywords = [
    "collections",
    "assoc_list",
    "assoc",
    "map",
]
categories = ["collections"]
license = "MIT"
repository = "https://github.com/spamviech/associated_list"

[package.metadata.docs.rs]
all-features = true

[dependencies]

[dev-dependencies.quickcheck]
version = "1.0.3"
default-features = false

[dev-dependencies.quickcheck_macros]
version = "1.0.0"

[features]
allocator_api = []
default = []
doc_auto_cfg = []
nightly = [
    "allocator_api",
    "doc_auto_cfg",
]

[lints.clippy]
absolute_paths = "warn"
alloc_instead_of_core = "warn"
allow_attributes = "allow"
allow_attributes_without_reason = "warn"
arithmetic_side_effects = "warn"
as_conversions = "warn"
as_underscore = "warn"
assertions_on_result_states = "warn"
big_endian_bytes = "warn"
cargo = "warn"
clone_on_ref_ptr = "warn"
complexity = "warn"
correctness = "deny"
create_dir = "warn"
dbg_macro = "warn"
decimal_literal_representation = "warn"
default_numeric_fallback = "allow"
default_union_representation = "warn"
deref_by_slicing = "allow"
disallowed_script_idents = "allow"
else_if_without_else = "warn"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
error_impl_error = "warn"
exhaustive_enums = "allow"
exhaustive_structs = "warn"
exit = "warn"
expect_used = "allow"
filetype_is_file = "warn"
float_arithmetic = "warn"
float_cmp_const = "warn"
fn_to_numeric_cast_any = "warn"
format_push_string = "warn"
get_unwrap = "warn"
host_endian_bytes = "warn"
if_then_some_else_none = "warn"
impl_trait_in_params = "allow"
implicit_return = "allow"
indexing_slicing = "warn"
inline_asm_x86_att_syntax = "warn"
inline_asm_x86_intel_syntax = "warn"
integer_division = "warn"
large_include_file = "warn"
let_underscore_must_use = "allow"
let_underscore_untyped = "allow"
little_endian_bytes = "warn"
lossy_float_literal = "warn"
map_err_ignore = "warn"
mem_forget = "warn"
min_ident_chars = "warn"
missing_assert_message = "warn"
missing_asserts_for_indexing = "warn"
missing_docs_in_private_items = "warn"
missing_inline_in_public_items = "warn"
missing_trait_methods = "allow"
mixed_read_write_in_expression = "warn"
mod_module_files = "deny"
modulo_arithmetic = "allow"
multiple_inherent_impl = "warn"
multiple_unsafe_ops_per_block = "warn"
mutex_atomic = "warn"
needless_raw_strings = "warn"
non_ascii_literal = "allow"
panic = "warn"
panic_in_result_fn = "warn"
partial_pub_fields = "warn"
pattern_type_mismatch = "allow"
pedantic = "warn"
perf = "warn"
print_stderr = "warn"
print_stdout = "warn"
pub_use = "warn"
pub_with_shorthand = "allow"
pub_without_shorthand = "warn"
question_mark_used = "allow"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_type_annotations = "warn"
ref_patterns = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_name_method = "warn"
self_named_module_files = "allow"
semicolon_inside_block = "warn"
semicolon_outside_block = "allow"
separated_literal_suffix = "warn"
shadow_reuse = "allow"
shadow_same = "allow"
shadow_unrelated = "warn"
single_call_fn = "allow"
single_char_lifetime_names = "allow"
std_instead_of_alloc = "warn"
std_instead_of_core = "warn"
str_to_string = "warn"
string_add = "warn"
string_lit_chars_any = "warn"
string_slice = "warn"
string_to_string = "warn"
style = "warn"
suspicious = "warn"
suspicious_xor_used_as_pow = "warn"
tests_outside_test_module = "warn"
todo = "warn"
try_err = "warn"
undocumented_unsafe_blocks = "warn"
unimplemented = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unneeded_field_pattern = "allow"
unreachable = "allow"
unseparated_literal_suffix = "allow"
unwrap_in_result = "warn"
unwrap_used = "warn"
use_debug = "warn"
verbose_file_reads = "warn"
wildcard_enum_match_arm = "warn"

[lints.rust]
absolute_paths_not_starting_with_crate = "warn"
box_pointers = "allow"
elided_lifetimes_in_paths = "warn"
explicit_outlives_requirements = "warn"
keyword_idents = "warn"
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
missing_abi = "warn"
missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
missing_docs = "warn"
non_ascii_idents = "allow"
noop_method_call = "warn"
pointer_structural_match = "warn"
rust_2021_incompatible_closure_captures = "warn"
rust_2021_incompatible_or_patterns = "warn"
rust_2021_prefixes_incompatible_syntax = "warn"
rust_2021_prelude_collisions = "warn"
single_use_lifetimes = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unreachable_pub = "warn"
unsafe_code = "warn"
unsafe_op_in_unsafe_fn = "warn"
unstable_features = "allow"
unused_crate_dependencies = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
unused_results = "warn"
variant_size_differences = "warn"
