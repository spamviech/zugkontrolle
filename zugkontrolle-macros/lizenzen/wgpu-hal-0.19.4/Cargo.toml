# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.70"
name = "wgpu-hal"
version = "0.19.4"
authors = ["gfx-rs developers"]
description = "WebGPU hardware abstraction layer"
homepage = "https://wgpu.rs/"
readme = "README.md"
keywords = ["graphics"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/gfx-rs/wgpu"

[package.metadata.docs.rs]
features = [
    "vulkan",
    "gles",
    "renderdoc",
]
rustdoc-args = [
    "--cfg",
    "docsrs",
]
targets = [
    "x86_64-unknown-linux-gnu",
    "x86_64-apple-darwin",
    "x86_64-pc-windows-msvc",
    "wasm32-unknown-unknown",
]

[lib]

[[example]]
name = "halmark"

[[example]]
name = "raw-gles"
required-features = ["gles"]

[dependencies.arrayvec]
version = "0.7"

[dependencies.bitflags]
version = "2"

[dependencies.glow]
version = "0.13.1"
optional = true

[dependencies.log]
version = "0.4"

[dependencies.naga]
version = "0.19.0"
features = ["clone"]

[dependencies.once_cell]
version = "1.19.0"

[dependencies.parking_lot]
version = ">=0.11,<0.13"

[dependencies.profiling]
version = "1"
default-features = false

[dependencies.raw-window-handle]
version = "0.6"

[dependencies.rustc-hash]
version = "1.1"

[dependencies.thiserror]
version = "1"

[dependencies.wgt]
version = "0.19.0"
package = "wgpu-types"

[dev-dependencies.cfg-if]
version = "1"

[dev-dependencies.env_logger]
version = "0.10"

[dev-dependencies.glam]
version = "0.25.0"

[dev-dependencies.naga]
version = "0.19.0"
features = ["wgsl-in"]

[dev-dependencies.winit]
version = "0.29.9"
features = ["android-native-activity"]

[build-dependencies.cfg_aliases]
version = "0.1"

[features]
default = ["link"]
dx12 = [
    "naga/hlsl-out",
    "d3d12",
    "bit-set",
    "libloading",
    "range-alloc",
    "winapi/std",
    "winapi/winbase",
    "winapi/d3d12",
    "winapi/d3d12shader",
    "winapi/d3d12sdklayers",
    "winapi/dxgi1_6",
]
dxc_shader_compiler = ["hassle-rs"]
fragile-send-sync-non-atomic-wasm = ["wgt/fragile-send-sync-non-atomic-wasm"]
gles = [
    "naga/glsl-out",
    "glow",
    "glutin_wgl_sys",
    "khronos-egl",
    "libloading",
]
link = ["metal/link"]
metal = [
    "naga/msl-out",
    "block",
]
renderdoc = [
    "libloading",
    "renderdoc-sys",
]
vulkan = [
    "naga/spv-out",
    "ash",
    "gpu-alloc",
    "gpu-descriptor",
    "libloading",
    "smallvec",
]
windows_rs = ["gpu-allocator"]

[target."cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))".dependencies.js-sys]
version = "0.3.67"

[target."cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))".dependencies.wasm-bindgen]
version = "0.2.87"

[target."cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))".dependencies.web-sys]
version = "0.3.67"
features = [
    "Window",
    "HtmlCanvasElement",
    "WebGl2RenderingContext",
    "OffscreenCanvas",
]

[target."cfg(any(target_os=\"macos\", target_os=\"ios\"))".dependencies.block]
version = "0.1"
optional = true

[target."cfg(any(target_os=\"macos\", target_os=\"ios\"))".dependencies.core-graphics-types]
version = "0.1"

[target."cfg(any(target_os=\"macos\", target_os=\"ios\"))".dependencies.metal]
version = "0.27.0"

[target."cfg(any(target_os=\"macos\", target_os=\"ios\"))".dependencies.objc]
version = "0.2.5"

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.ash]
version = "0.37.3"
optional = true

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.gpu-alloc]
version = "0.6"
optional = true

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.gpu-descriptor]
version = "0.2"
optional = true

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.khronos-egl]
version = "6"
features = ["dynamic"]
optional = true

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.libloading]
version = ">=0.7, <0.9"
optional = true

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.renderdoc-sys]
version = "1.0.0"
optional = true

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.smallvec]
version = "1"
features = ["union"]
optional = true

[target."cfg(not(target_arch = \"wasm32\"))".dev-dependencies.glutin]
version = "0.29.1"

[target."cfg(target_os = \"android\")".dependencies.android_system_properties]
version = "0.1.1"

[target."cfg(target_os = \"android\")".dependencies.ndk-sys]
version = "0.5.0"

[target."cfg(target_os = \"emscripten\")".dependencies.khronos-egl]
version = "6"
features = [
    "static",
    "no-pkg-config",
]

[target."cfg(target_os = \"emscripten\")".dependencies.libloading]
version = ">=0.7, <0.9"
optional = true

[target."cfg(unix)".dependencies.libc]
version = "0.2"

[target."cfg(windows)".dependencies.bit-set]
version = "0.5"
optional = true

[target."cfg(windows)".dependencies.d3d12]
version = "0.19.0"
features = ["libloading"]
optional = true

[target."cfg(windows)".dependencies.glutin_wgl_sys]
version = "0.5"
optional = true

[target."cfg(windows)".dependencies.gpu-allocator]
version = "0.25"
features = [
    "d3d12",
    "public-winapi",
]
optional = true
default_features = false

[target."cfg(windows)".dependencies.hassle-rs]
version = "0.11"
optional = true

[target."cfg(windows)".dependencies.range-alloc]
version = "0.1"
optional = true

[target."cfg(windows)".dependencies.winapi]
version = "0.3"
features = [
    "profileapi",
    "libloaderapi",
    "windef",
    "winuser",
    "dcomp",
]
