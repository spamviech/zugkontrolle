[package]
name = "zugkontrolle"
version = "5.0.0"
authors.workspace = true
readme.workspace = true
edition.workspace = true
license.workspace = true
publish.workspace = true
rust-version.workspace = true
repository.workspace = true

[workspace]
members = [
    "zugkontrolle-macros",
    "zugkontrolle-anschluss",
    "zugkontrolle-util",
    "zugkontrolle-argumente",
    "zugkontrolle-typen",
    "zugkontrolle-gleis",
    "zugkontrolle-gleise",
    "zugkontrolle-application",
]
resolver = "2"

[workspace.package]
authors = ["spamviech <spamviech@web.de>"]
readme = "README.md"
edition = "2021"
license = "MIT"
publish = false
rust-version = "1.75"
repository = "https://github.com/spamviech/zugkontrolle"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[profile.release]
strip = "symbols"
lto = "fat"
panic = "abort"

[profile.dev]
strip = "none"
lto = "thin"
panic = "abort"

[features]
default = []
# Add all raspi-specific dependencies. Without this feature, e.g. pins won't change their output value.
raspi = ["zugkontrolle-anschluss/raspi"]

[lints]
workspace = true

# dependencies
[dependencies]
zugkontrolle-anschluss.workspace = true
zugkontrolle-application.workspace = true
zugkontrolle-argumente.workspace = true
zugkontrolle-gleis.workspace = true
flexi_logger.workspace = true
iced.workspace = true
log.workspace = true

# can't be used on non-raspi systems
[dependencies.rppal]
workspace = true
optional = true

#[dependencies.libcamera]
#workspace = true
#optional = true

[build-dependencies]
embed-resource.workspace = true

[workspace.lints.rust]
# Aktiviere alle Warnungen/Lints, außer: box_pointers, non_ascii_idents, unstable_features
absolute_paths_not_starting_with_crate = "warn"
elided_lifetimes_in_paths = "warn"
explicit_outlives_requirements = "warn"
keyword_idents = "warn"
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
missing_abi = "warn"
missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
missing_docs = "warn"
noop_method_call = "warn"
pointer_structural_match = "warn"
rust_2021_incompatible_closure_captures = "warn"
rust_2021_incompatible_or_patterns = "warn"
rust_2021_prefixes_incompatible_syntax = "warn"
rust_2021_prelude_collisions = "warn"
single_use_lifetimes = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unreachable_pub = "warn"
unsafe_code = "warn"
unsafe_op_in_unsafe_fn = "warn"
unused_crate_dependencies = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
unused_results = "warn"
variant_size_differences = "warn"
box_pointers = "allow"
non_ascii_idents = "allow"
unstable_features = "allow"

[workspace.lints.clippy]
correctness = "deny"
suspicious = "warn"
complexity = "warn"
perf = "warn"
style = "warn"
cargo = "warn"
# pedantic group lints
pedantic = "warn"
implicit_hasher = "allow" # benötigt Typ-Signatur als disambiguator bei Verwendung
# restriction group lints
absolute_paths = "warn"
alloc_instead_of_core = "warn"
allow_attributes = "allow"               # expect-attribute still experimental
allow_attributes_without_reason = "warn"
arithmetic_side_effects = "warn"
as_conversions = "warn"
as_underscore = "warn"
assertions_on_result_states = "warn"
big_endian_bytes = "warn"
clone_on_ref_ptr = "warn"
create_dir = "warn"
dbg_macro = "warn"
decimal_literal_representation = "warn"
default_numeric_fallback = "allow"       # nervig
default_union_representation = "warn"
deref_by_slicing = "allow"               # bin anderer Meinung
disallowed_script_idents = "allow"       # keine Einschränkung für Namensgebung
else_if_without_else = "warn"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
error_impl_error = "warn"
exhaustive_enums = "allow"               # exhaustive sollte der Standard sein
exhaustive_structs = "allow"             # exhaustive sollte der Standard sein
exit = "warn"
expect_used = "allow"                    # expect wird öfter verwendet um Invarianten auszunutzen
filetype_is_file = "warn"
float_arithmetic = "allow"               # float-Berechnungen sind kein Problem
float_cmp_const = "warn"
fn_to_numeric_cast_any = "warn"
format_push_string = "warn"
get_unwrap = "warn"
host_endian_bytes = "warn"
if_then_some_else_none = "warn"
impl_trait_in_params = "allow"           # Erlaubt manche Typ-Parameter nicht zu benennen
implicit_return = "allow"                # idiomatic rust
indexing_slicing = "warn"
inline_asm_x86_att_syntax = "warn"
inline_asm_x86_intel_syntax = "warn"
integer_division = "warn"
large_include_file = "warn"
let_underscore_must_use = "allow"        # wird verwendet, um die must_use-Warnung auszuschalten
let_underscore_untyped = "allow"         # nervig, jede Typ-Anpassung der aufgerufenen Funktion muss dupliziert werden
little_endian_bytes = "warn"
lossy_float_literal = "warn"
map_err_ignore = "warn"
mem_forget = "warn"
min_ident_chars = "warn"
missing_assert_message = "warn"
missing_asserts_for_indexing = "warn"
missing_docs_in_private_items = "warn"
missing_inline_in_public_items = "allow" # die meisten functions sind groß genug, dass inline nicht zwingend Sinn macht
missing_trait_methods = "allow"          # soll nicht global aktiviert werden
mixed_read_write_in_expression = "warn"
mod_module_files = "deny"
modulo_arithmetic = "allow"              # nur ein Problem, sobald FFI involviert ist
multiple_inherent_impl = "allow"         # aufteilen erlaubt, Hilfsfunktionen/-Typen nah an z.B. trait-implementieren zu schreiben.
multiple_unsafe_ops_per_block = "warn"
mutex_atomic = "warn"
needless_raw_strings = "warn"
non_ascii_literal = "allow"              # wenn ein Editor kein unicode kann sollte er nicht verwendet werden...
panic = "warn"
panic_in_result_fn = "warn"
partial_pub_fields = "warn"
pattern_type_mismatch = "allow"          # benötigt viel boilerplate um match-statements
print_stderr = "warn"
print_stdout = "warn"
pub_use = "warn"
pub_with_shorthand = "allow"             # pub_without_shorthand aktiviert
pub_without_shorthand = "warn"
question_mark_used = "allow"             # ?-operator ist super
rc_buffer = "warn"
rc_mutex = "warn"
redundant_type_annotations = "warn"
ref_patterns = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_name_method = "warn"
self_named_module_files = "allow"        # mod_module_files aktiviert
semicolon_inside_block = "warn"
semicolon_outside_block = "allow"        # semicolon_inside_block aktiviert
separated_literal_suffix = "warn"
shadow_reuse = "allow"                   # common rust pattern, führt sonst zu a1 = a0 + 3, ...
shadow_same = "allow"                    # nützlich, wenn die ursprüngliche mutability/ownership/... nicht mehr gebraucht wird
shadow_unrelated = "warn"
single_call_fn = "allow"                 # single use Funktionen verbessern die Code-Struktur
single_char_lifetime_names = "allow"     # einzelner Buchstabe ist "üblich"
std_instead_of_alloc = "allow"           # kein no_std-crate
std_instead_of_core = "allow"            # kein no_std-crate
str_to_string = "warn"
string_add = "warn"
string_lit_chars_any = "allow"           # lint existiert aus Performance-Gründen, app ist nicht Performance-kritisch
string_slice = "warn"
string_to_string = "warn"
suspicious_xor_used_as_pow = "warn"
tests_outside_test_module = "warn"
todo = "warn"
try_err = "warn"
undocumented_unsafe_blocks = "warn"
unimplemented = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unneeded_field_pattern = "allow"         # Explizit Felder zu ignorieren hilft um Änderungen nich zu "verpassen"
unreachable = "allow"                    # unreachable wird verwendet um Invarianten auszunutzen
unseparated_literal_suffix = "allow"     # separated_literal_suffix aktiviert
unwrap_in_result = "allow"               # führt nur dazu nicht-behandelbare Fehler-Varianten hinzufügen zu müssen
unwrap_used = "warn"
use_debug = "allow"                      # TODO wird aktuell für die meisten Fehlermeldungen verwendet. Allow, bis andere Lints adressiert wurden.
verbose_file_reads = "warn"
wildcard_enum_match_arm = "warn"

# workspace dependencies
[workspace.dependencies.zugkontrolle-macros]
path = "zugkontrolle-macros"
version = "5.0.0"

[workspace.dependencies.zugkontrolle-anschluss]
path = "zugkontrolle-anschluss"
version = "0.1.0"

[workspace.dependencies.zugkontrolle-util]
path = "zugkontrolle-util"
version = "0.1.0"

[workspace.dependencies.zugkontrolle-argumente]
path = "zugkontrolle-argumente"
version = "0.1.0"

[workspace.dependencies.zugkontrolle-typen]
path = "zugkontrolle-typen"
version = "0.1.0"

[workspace.dependencies.zugkontrolle-id]
path = "zugkontrolle-id"
version = "0.1.0"

[workspace.dependencies.zugkontrolle-steuerung]
path = "zugkontrolle-steuerung"
version = "0.1.0"

[workspace.dependencies.zugkontrolle-gleis]
path = "zugkontrolle-gleis"
version = "0.1.0"

[workspace.dependencies.zugkontrolle-gleise]
path = "zugkontrolle-gleise"
version = "0.1.0"

[workspace.dependencies.zugkontrolle-application]
path = "zugkontrolle-application"
version = "0.1.0"

[workspace.dependencies.zugkontrolle-test-util]
path = "zugkontrolle-test-util"
version = "0.1.0"

[workspace.dependencies]
associated_list = "0.2.0"
async-io = "2.3.0"
bincode = "1.3.3"
cargo_metadata = "0.18.1"
difference = "2.0.0"
dyn-clonable = "0.9.0"
either = "1.6.1"
embed-resource = "2.1.1"
enum-iterator = "1.4.1"
int-enum = "1.0.0"
itertools = "0.12.0"
log = "0.4.14"
num-traits = "0.2.14"
once_cell = "1.17.1"
parking_lot = "0.12.0"
proc-macro-crate = "3.1.0"
proc-macro2 = "1.0.36"
quote = "1.0.15"
rstar = "0.12.0"
take_mut = "0.2.2"
unicase = "2.6.0"

[workspace.dependencies.kommandozeilen_argumente]
version = "0.2.1"
features = ["derive"]

[workspace.dependencies.nonempty]
version = "0.9.0"
features = ["serialize"]

[workspace.dependencies.serde]
version = "1.0.136"
features = ["derive"]

[workspace.dependencies.flexi_logger]
version = "0.27.3"
default_features = false
features = ["colors"]

[workspace.dependencies.heck]
version = "0.4.0"
features = ["unicode"]
default-features = false

[workspace.dependencies.iced]
version = "0.12.1"
default-features = false
features = ["canvas", "lazy"]

[workspace.dependencies.iced_core]
version = "0.12.3"
default-features = false

[workspace.dependencies.iced_futures]
version = "0.12.0"
default-features = false

[workspace.dependencies.iced_widget]
version = "0.12.3"
default-features = false
features = ["lazy"]

[workspace.dependencies.iced_graphics]
version = "0.12.1"
default-features = false
features = ["geometry"]

[workspace.dependencies.iced_renderer]
version = "0.12.1"
default-features = false
features = ["geometry"]

[workspace.dependencies.iced_aw]
version = "0.8.0"
default-features = false
features = ["card", "tab_bar", "tabs", "number_input", "icons"]
# git = "https://github.com/iced-rs/iced_aw"
git = "https://github.com/spamviech/iced_aw"
rev = "1acccc8f237907a353f45e32e7f44828727ac772"

[workspace.dependencies.rppal]
version = "0.17.1"

[workspace.dependencies.syn]
version = "2.0.15"
features = ["parsing", "full", "extra-traits"]
default_features = false

#[workspace.dependencies.libcamera]
#version = "0.2.3"
