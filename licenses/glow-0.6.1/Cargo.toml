# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies
#
# If you believe there's an error in this file please file an
# issue against the rust-lang/cargo repository. If you're
# editing this file be aware that the upstream Cargo.toml
# will likely look very different (and much more reasonable)

[package]
edition = "2018"
name = "glow"
version = "0.6.1"
authors = ["Joshua Groves <josh@joshgroves.com>", "Dzmitry Malyshau <kvarkus@gmail.com>"]
description = "GL on Whatever: a set of bindings to run GL (Open GL, OpenGL ES, and WebGL) anywhere, and avoid target-specific code."
homepage = "https://github.com/grovesNL/glow.git"
license = "MIT OR Apache-2.0"
repository = "https://github.com/grovesNL/glow"
[package.metadata.docs.rs]
default-target = "x86_64-unknown-linux-gnu"
features = ["web-sys"]
targets = ["x86_64-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-pc-windows-msvc", "i686-unknown-linux-gnu", "i686-pc-windows-msvc", "wasm32-unknown-unknown"]

[lib]
name = "glow"
path = "src/lib.rs"

[features]
default = ["web-sys"]
stdweb = ["std_web", "webgl_stdweb"]
web-sys = ["web_sys", "js-sys", "wasm-bindgen"]
[target."cfg(not(any(target_arch = \"wasm32\")))".dependencies.glutin]
version = "0.24"
optional = true

[target."cfg(not(any(target_arch = \"wasm32\")))".dependencies.sdl2]
version = "0.33"
optional = true
[target."cfg(target_arch = \"wasm32\")".dependencies.js-sys]
version = "~0.3"
optional = true

[target."cfg(target_arch = \"wasm32\")".dependencies.slotmap]
version = "0.4"

[target."cfg(target_arch = \"wasm32\")".dependencies.std_web]
version = "0.4.20"
optional = true
package = "stdweb"

[target."cfg(target_arch = \"wasm32\")".dependencies.wasm-bindgen]
version = "~0.2"
optional = true

[target."cfg(target_arch = \"wasm32\")".dependencies.web_sys]
version = "~0.3.37"
features = ["Document", "Element", "HtmlCanvasElement", "HtmlImageElement", "ImageBitmap", "WebGlActiveInfo", "WebGlBuffer", "WebGlFramebuffer", "WebGlProgram", "WebGlQuery", "WebGlRenderbuffer", "WebGlRenderingContext", "WebGl2RenderingContext", "WebGlSampler", "WebGlShader", "WebGlSync", "WebGlTexture", "WebGlTransformFeedback", "WebGlUniformLocation", "WebGlVertexArrayObject", "Window", "AngleInstancedArrays", "ExtBlendMinmax", "ExtColorBufferFloat", "ExtColorBufferHalfFloat", "ExtDisjointTimerQuery", "ExtFragDepth", "ExtShaderTextureLod", "ExtSRgb", "ExtTextureFilterAnisotropic", "OesElementIndexUint", "OesStandardDerivatives", "OesTextureFloat", "OesTextureFloatLinear", "OesTextureHalfFloat", "OesTextureHalfFloatLinear", "OesVertexArrayObject", "WebglColorBufferFloat", "WebglCompressedTextureAstc", "WebglCompressedTextureEtc", "WebglCompressedTextureEtc1", "WebglCompressedTexturePvrtc", "WebglCompressedTextureS3tc", "WebglCompressedTextureS3tcSrgb", "WebglDebugRendererInfo", "WebglDebugShaders", "WebglDepthTexture", "WebglDrawBuffers", "WebglLoseContext"]
optional = true
package = "web-sys"

[target."cfg(target_arch = \"wasm32\")".dependencies.webgl_stdweb]
version = "0.3"
optional = true
