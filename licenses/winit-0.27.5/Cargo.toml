# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.57.0"
name = "winit"
version = "0.27.5"
authors = [
    "The winit contributors",
    "Pierre Krieger <pierre.krieger1708@gmail.com>",
]
description = "Cross-platform window creation library."
documentation = "https://docs.rs/winit"
readme = "README.md"
keywords = ["windowing"]
categories = ["gui"]
license = "Apache-2.0"
repository = "https://github.com/rust-windowing/winit"

[package.metadata.docs.rs]
features = ["serde"]
default-target = "x86_64-unknown-linux-gnu"
targets = [
    "i686-pc-windows-msvc",
    "x86_64-pc-windows-msvc",
    "x86_64-apple-darwin",
    "i686-unknown-linux-gnu",
    "x86_64-unknown-linux-gnu",
    "x86_64-apple-ios",
    "aarch64-linux-android",
    "wasm32-unknown-unknown",
]

[dependencies.bitflags]
version = "1"

[dependencies.instant]
version = "0.1"
features = ["wasm-bindgen"]

[dependencies.log]
version = "0.4"

[dependencies.mint]
version = "0.5.6"
optional = true

[dependencies.once_cell]
version = "1.12"

[dependencies.raw_window_handle]
version = "0.5"
package = "raw-window-handle"

[dependencies.raw_window_handle_04]
version = "0.4.3"
package = "raw-window-handle"

[dependencies.serde]
version = "1"
features = ["serde_derive"]
optional = true

[dev-dependencies.image]
version = "0.24.0"
features = ["png"]
default-features = false

[dev-dependencies.simple_logger]
version = "2.1.0"
default_features = false

[features]
default = [
    "x11",
    "wayland",
    "wayland-dlopen",
    "wayland-csd-adwaita",
]
wayland = [
    "wayland-client",
    "wayland-protocols",
    "sctk",
]
wayland-csd-adwaita = [
    "sctk-adwaita",
    "sctk-adwaita/title",
]
wayland-csd-adwaita-notitle = ["sctk-adwaita"]
wayland-dlopen = [
    "sctk/dlopen",
    "wayland-client/dlopen",
]
x11 = [
    "x11-dl",
    "mio",
    "percent-encoding",
    "parking_lot",
]

[target."cfg(any(target_os = \"ios\", target_os = \"macos\"))".dependencies.objc]
version = "0.2.7"

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))".dependencies.libc]
version = "0.2.64"

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))".dependencies.mio]
version = "0.8"
features = ["os-ext"]
optional = true

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))".dependencies.parking_lot]
version = "0.12.0"
optional = true

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))".dependencies.percent-encoding]
version = "2.0"
optional = true

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))".dependencies.sctk]
version = "0.16.0"
features = ["calloop"]
optional = true
default_features = false
package = "smithay-client-toolkit"

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))".dependencies.sctk-adwaita]
version = "0.4.1"
optional = true

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))".dependencies.wayland-client]
version = "0.29.4"
features = ["use_system_lib"]
optional = true
default_features = false

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))".dependencies.wayland-protocols]
version = "0.29.4"
features = ["staging_protocols"]
optional = true

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))".dependencies.x11-dl]
version = "2.18.5"
optional = true

[target."cfg(target_arch = \"wasm32\")".dependencies.wasm-bindgen]
version = "0.2.45"

[target."cfg(target_arch = \"wasm32\")".dependencies.web_sys]
version = "0.3.22"
features = [
    "console",
    "AddEventListenerOptions",
    "CssStyleDeclaration",
    "BeforeUnloadEvent",
    "Document",
    "DomRect",
    "Element",
    "Event",
    "EventTarget",
    "FocusEvent",
    "HtmlCanvasElement",
    "HtmlElement",
    "KeyboardEvent",
    "MediaQueryList",
    "MediaQueryListEvent",
    "MouseEvent",
    "Node",
    "PointerEvent",
    "Window",
    "WheelEvent",
]
package = "web-sys"

[target."cfg(target_arch = \"wasm32\")".dev-dependencies.console_log]
version = "0.2"

[target."cfg(target_os = \"android\")".dependencies.ndk]
version = "0.7.0"

[target."cfg(target_os = \"android\")".dependencies.ndk-glue]
version = "0.7.0"

[target."cfg(target_os = \"macos\")".dependencies.cocoa]
version = "0.24"

[target."cfg(target_os = \"macos\")".dependencies.core-foundation]
version = "0.9"

[target."cfg(target_os = \"macos\")".dependencies.core-graphics]
version = "0.22"

[target."cfg(target_os = \"macos\")".dependencies.dispatch]
version = "0.2.0"

[target."cfg(target_os = \"windows\")".dependencies.parking_lot]
version = "0.12"

[target."cfg(target_os = \"windows\")".dependencies.windows-sys]
version = "0.36"
features = [
    "Win32_Devices_HumanInterfaceDevice",
    "Win32_Foundation",
    "Win32_Globalization",
    "Win32_Graphics_Dwm",
    "Win32_Graphics_Gdi",
    "Win32_Media",
    "Win32_System_Com_StructuredStorage",
    "Win32_System_Com",
    "Win32_System_LibraryLoader",
    "Win32_System_Ole",
    "Win32_System_SystemInformation",
    "Win32_System_SystemServices",
    "Win32_System_Threading",
    "Win32_System_WindowsProgramming",
    "Win32_UI_Accessibility",
    "Win32_UI_Controls",
    "Win32_UI_HiDpi",
    "Win32_UI_Input_Ime",
    "Win32_UI_Input_KeyboardAndMouse",
    "Win32_UI_Input_Pointer",
    "Win32_UI_Input_Touch",
    "Win32_UI_Shell",
    "Win32_UI_TextServices",
    "Win32_UI_WindowsAndMessaging",
]
