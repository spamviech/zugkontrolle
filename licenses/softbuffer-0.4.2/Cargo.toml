# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.65.0"
name = "softbuffer"
version = "0.4.2"
exclude = ["examples"]
description = "Cross-platform software buffer"
documentation = "https://docs.rs/softbuffer"
readme = "README.md"
keywords = [
    "framebuffer",
    "windowing",
]
categories = [
    "game-development",
    "graphics",
    "gui",
    "multimedia",
    "rendering",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/rust-windowing/softbuffer"

[package.metadata.docs.rs]
all-features = true
default-target = "x86_64-unknown-linux-gnu"
rustdoc-args = [
    "--cfg",
    "docsrs",
]
targets = [
    "x86_64-pc-windows-msvc",
    "x86_64-apple-darwin",
    "x86_64-unknown-linux-gnu",
    "wasm32-unknown-unknown",
]

[[test]]
name = "present_and_fetch"
path = "tests/present_and_fetch.rs"
harness = false

[[bench]]
name = "buffer_mut"
harness = false

[dependencies.log]
version = "0.4.17"

[dependencies.raw_window_handle]
version = "0.6"
features = ["std"]
package = "raw-window-handle"

[dev-dependencies.colorous]
version = "1.0.12"

[dev-dependencies.criterion]
version = "0.4.0"
features = ["cargo_bench_support"]
default-features = false

[dev-dependencies.image]
version = "0.24.6"
features = ["jpeg"]
default-features = false

[dev-dependencies.instant]
version = "0.1.12"

[dev-dependencies.winit]
version = "0.29.2"

[dev-dependencies.winit-test]
version = "0.1.0"

[build-dependencies.cfg_aliases]
version = "0.2.0"

[features]
default = [
    "kms",
    "x11",
    "x11-dlopen",
    "wayland",
    "wayland-dlopen",
]
kms = [
    "bytemuck",
    "drm",
    "rustix",
]
wayland = [
    "wayland-backend",
    "wayland-client",
    "memmap2",
    "rustix",
    "fastrand",
]
wayland-dlopen = ["wayland-sys/dlopen"]
x11 = [
    "as-raw-xcb-connection",
    "bytemuck",
    "fastrand",
    "rustix",
    "tiny-xlib",
    "x11rb",
]
x11-dlopen = [
    "tiny-xlib/dlopen",
    "x11rb/dl-libxcb",
]

[target."cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))".dependencies.as-raw-xcb-connection]
version = "1.0.0"
optional = true

[target."cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))".dependencies.bytemuck]
version = "1.12.3"
optional = true

[target."cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))".dependencies.drm]
version = "0.11.0"
optional = true
default-features = false

[target."cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))".dependencies.fastrand]
version = "2.0.0"
optional = true

[target."cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))".dependencies.memmap2]
version = "0.9.0"
optional = true

[target."cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))".dependencies.rustix]
version = "0.38.19"
features = [
    "fs",
    "mm",
    "shm",
    "std",
]
optional = true
default-features = false

[target."cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))".dependencies.tiny-xlib]
version = "0.2.1"
optional = true

[target."cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))".dependencies.wayland-backend]
version = "0.3.0"
features = ["client_system"]
optional = true

[target."cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))".dependencies.wayland-client]
version = "0.31.0"
optional = true

[target."cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))".dependencies.wayland-sys]
version = "0.31.0"

[target."cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))".dependencies.x11rb]
version = "0.13.0"
features = [
    "allow-unsafe-code",
    "shm",
]
optional = true

[target."cfg(all(unix, not(any(target_vendor = \"apple\", target_os = \"android\", target_os = \"redox\"))))".dev-dependencies.rustix]
version = "0.38.8"
features = ["event"]

[target."cfg(not(target_arch = \"wasm32\"))".dev-dependencies.image]
version = "0.24.6"

[target."cfg(not(target_arch = \"wasm32\"))".dev-dependencies.rayon]
version = "1.5.1"

[target."cfg(target_arch = \"wasm32\")".dependencies.js-sys]
version = "0.3.63"

[target."cfg(target_arch = \"wasm32\")".dependencies.wasm-bindgen]
version = "0.2.86"

[target."cfg(target_arch = \"wasm32\")".dependencies.web-sys]
version = "0.3.55"
features = [
    "CanvasRenderingContext2d",
    "Document",
    "Element",
    "HtmlCanvasElement",
    "ImageData",
    "OffscreenCanvas",
    "OffscreenCanvasRenderingContext2d",
    "Window",
]

[target."cfg(target_arch = \"wasm32\")".dev-dependencies.wasm-bindgen-test]
version = "0.3"

[target."cfg(target_os = \"macos\")".dependencies.bytemuck]
version = "1.12.3"
features = ["extern_crate_alloc"]

[target."cfg(target_os = \"macos\")".dependencies.cocoa]
version = "0.25.0"

[target."cfg(target_os = \"macos\")".dependencies.core-graphics]
version = "0.23.1"

[target."cfg(target_os = \"macos\")".dependencies.foreign-types]
version = "0.5.0"

[target."cfg(target_os = \"macos\")".dependencies.objc]
version = "0.2.7"

[target."cfg(target_os = \"redox\")".dependencies.redox_syscall]
version = "0.5"

[target."cfg(target_os = \"windows\")".dependencies.windows-sys]
version = "0.52.0"
features = [
    "Win32_Graphics_Gdi",
    "Win32_UI_WindowsAndMessaging",
    "Win32_Foundation",
]
